There is an error in current JuliaCall, which should be patched in upcoming versions.
See https://github.com/Non-Contradiction/JuliaCall/issues/203
diff -ruN JuliaCall_orig/inst/julia/JuliaObject.jl JuliaCall/inst/julia/JuliaObject.jl
--- JuliaCall_orig/inst/julia/JuliaObject.jl	2022-09-07 18:13:31.000000000 +0200
+++ JuliaCall/inst/julia/JuliaObject.jl	2023-09-26 17:29:44.310679473 +0200
@@ -74,14 +74,14 @@
 ## we should use JuliaObject for general AbstractArray
 @static if julia07
     @suppress_err begin
-        JuliaCall.sexpclass(x :: AbstractArray{T}) where {T} = RClass{:JuliaObject}
+        @eval JuliaCall.sexpclass(x :: AbstractArray{T}) where {T} = RClass{:JuliaObject}
     end
 
     ## AbstractArray{Any} should be converted to R List
     sexpclass(x :: AbstractArray{Any}) = RClass{:list}
 else
     @suppress_err begin
-        JuliaCall.sexp(x :: AbstractArray{T}) where {T} = sexp(JuliaObject(x))
+        @eval JuliaCall.sexp(x :: AbstractArray{T}) where {T} = sexp(JuliaObject(x))
     end
 
     ## AbstractArray{Any} should be converted to R List
